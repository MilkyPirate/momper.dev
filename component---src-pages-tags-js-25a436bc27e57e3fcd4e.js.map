{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","location","keywords","map","tag","key","fieldValue","to","replace","totalCount","pageQuery"],"mappings":"+LAuDeA,UA/CE,SAAC,GAAD,QACfC,KACuBC,EAFR,EAEbC,kBAAqBD,MAEHE,EAJL,EAGbC,KACEC,aAAgBF,MAJL,EAOfG,SAPe,OASf,kBAAC,IAAD,CAAQA,SAAU,OAAQH,MAAOA,GAC/B,kBAAC,IAAD,CACEA,MAAOA,EACPI,SAAU,KAEZ,6BACE,oCACA,4BACGN,EAAMO,KAAI,SAAAC,GAAG,OACZ,wBAAIC,IAAKD,EAAIE,YACX,kBAAC,IAAD,CAAMC,GAAE,SAAWH,EAAIE,WAAWE,QAAQ,KAAK,MAC5CJ,EAAIE,WADP,KACqBF,EAAIK,WADzB,aA8BL,IAAMC,EAAS","file":"component---src-pages-tags-js-25a436bc27e57e3fcd4e.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { Link, graphql } from \"gatsby\"\n\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/layout\"\n\nconst TagsPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n  location,\n}) => (\n  <Layout location={\"test\"} title={title}>\n    <SEO\n      title={title}\n      keywords={[]}\n    />\n    <div>\n      <h1>Tags</h1>\n      <ul>\n        {group.map(tag => (\n          <li key={tag.fieldValue}>\n            <Link to={`/tags/${tag.fieldValue.replace(/\\s/,'-')}`}>\n              {tag.fieldValue} ({tag.totalCount})\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </Layout>\n)\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`"],"sourceRoot":""}